# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ vladi-actions-test ]
  pull_request:
    branches: [ vladi-actions-test ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  diego:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@master
    - uses: actions/setup-ruby@v1
      with:
        ruby-version: '2.6'
    - name: Setup bazel
      uses: jwlawson/actions-setup-bazel@v1.0
      with:
        bazel-version: '3.1.0'
        github-api-token: ${{ secrets.GITHUB_TOKEN }}
    - name: Install parallel
      run: |
        sudo apt install -y parallel
    - name: Run kind
      run: |
        bazel run //dev/kind:start
        kubectl cluster-info
        kubectl get pods -n kube-system
    - name: Install cf-operator
      run: |
        kubectl create namespace cf-operator
        bazel run //dev/cf_operator:apply
    - name: Wait for cf-operator
      run: |
        parallel --verbose --retries 60 --delay 2 ::: 'kubectl wait --for=condition=Ready --timeout=600s -n cf-operator --selector=name=cf-operator pod'
        parallel --verbose --retries 60 --delay 2 ::: 'kubectl wait --for=condition=Ready --timeout=600s -n cf-operator --selector=name=quarks-job pod'
    - name: Wait for CRDs
      run: |
        parallel --verbose --retries 60 --delay 2 ::: 'kubectl wait --for condition=established --timeout=600s crd/boshdeployments.quarks.cloudfoundry.org'
        parallel --verbose --retries 60 --delay 2 ::: 'kubectl wait --for condition=established --timeout=600s crd/quarksjobs.quarks.cloudfoundry.org'
        parallel --verbose --retries 60 --delay 2 ::: 'kubectl wait --for condition=established --timeout=600s crd/quarkssecrets.quarks.cloudfoundry.org'
        parallel --verbose --retries 60 --delay 2 ::: 'kubectl wait --for condition=established --timeout=600s crd/quarksstatefulsets.quarks.cloudfoundry.org'
    - name: Configure Domain
      run: |
        domain=$(bazel run @kubectl//:binary -- get node kubecf-control-plane -o json | bazel run @jq//:binary -- -r '.status.addresses[] | select(.type=="InternalIP").address')
        echo "system_domain: $domain.nip.io" > "$(bazel info workspace)/dev/kubecf/system_domain_values.yaml"
    - name: Install KubeCF
      run: |
        bazel run //dev/kubecf:apply
    - name: Wait for KubeCF
      run: |
        kubectl get pods --namespace kubecf --watch &
        WATCH_PID=$!
        sleep 300
        kill $WATCH_PID
        parallel --verbose --retries 40 --delay 15 ::: 'kubectl wait --for=condition=Ready -n kubecf --timeout=2400s --selector=quarks.cloudfoundry.org/deployment-name=kubecf pod'
