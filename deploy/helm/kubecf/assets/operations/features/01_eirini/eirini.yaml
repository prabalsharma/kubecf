# Add the eirini BOSH DNS alias.
- type: replace
  path: /addons/name=bosh-dns-aliases/jobs/name=bosh-dns-aliases/properties/aliases/-
  value:
    domain: eirini.service.cf.internal
    targets:
    - deployment: cf
      domain: bosh
      instance_group: eirini
      network: default
      query: '*'

- type: replace
  path: /instance_groups/name=nats:after
  value:
    name: configure-eirini
    lifecycle: auto-errand
    release: eirini
    instances: 1
    stemcell: default
    env:
      bosh:
        agent:
          settings:
            serviceAccountName: {{ .Values.deployment_name }}-eirini
            disable_log_sidecar: true
    jobs:
    - name: configure-eirini-scf
      release: eirini
      properties:
        quarks:
          bpm:
            processes:
            - name: configure-eirini
              executable: /bin/bash
              args:
                - -c
                - /var/vcap/jobs/configure-eirini-scf/bin/run
        capi:
          cc_uploader:
            mutual_tls:
              server_cert: "((cc_bridge_cc_uploader_server.certificate))"
              server_key: "((cc_bridge_cc_uploader_server.private_key))"
        opi:
          registry_address: 127.0.0.1:{{ .Values.features.eirini.registry.service.nodePort }}
          kube_namespace: {{ .Values.deployment_name }}-eirini
          certs_secret_name: eirini-staging-secret
          cc_cert: ((cc_bridge_tps.certificate))
          cc_key: ((cc_bridge_tps.private_key))
          cc_ca: ((service_cf_internal_ca.certificate))
        cc:
          opi:
            client_cert: ((eirini_tls_client_cert.certificate))
            client_key: ((eirini_tls_client_cert.private_key))

# Add eirini
- type: replace
  path: /instance_groups/name=configure-eirini:after
  value:
    name: eirini
    release: eirini
    instances: 1
    stemcell: default
    update:
      serial: true
    env:
      bosh:
        agent:
          settings:
            serviceAccountName: {{ .Values.deployment_name }}-eirini
    jobs:
    - name: eirini-loggregator-bridge
      release: eirini
      properties:
        quarks:
          envs:
          # TODO: this isn't working for some reason - the env var is not present in the pod.
          - name: EIRINI_LOGGREGATOR_BRIDGE_LOGLEVEL
            value: debug
        eirini-loggregator-bridge:
          loggregator_ca: '((loggregator_ca.certificate))'
          loggregator_cert: '((loggregator_tls_agent.certificate))'
          loggregator_key: '((loggregator_tls_agent.private_key))'
          loggregator_endpoint: "doppler.service.cf.internal:8082"
          namespace: '{{ .Values.deployment_name }}-eirini'
    - name: opi
      release: eirini
      properties:
        opi:
          server_cert: ((eirini_tls_server_cert.certificate))
          server_key: ((eirini_tls_server_cert.private_key))
          client_ca: ((service_cf_internal_ca.certificate))
          kube_namespace: {{ .Values.deployment_name }}-eirini
          kube_service_host: ""
          kube_service_port: ""
          registry_address: 127.0.0.1:{{ .Values.features.eirini.registry.service.nodePort }}
          registry_username: admin
          registry_password: ((bits_service_signing_password))
          nats_password: ((nats_password))
          nats_ip: nats.service.cf.internal
          certs_secret_name: eirini-staging-secret
          cc_internal_api: https://cloud-controller-ng.service.cf.internal:9023
          eirini_address: https://{{ .Values.deployment_name }}-eirini.{{ .Release.Namespace }}:8484
          downloader_image: "eirini/recipe-downloader:0.3.0"
          uploader_image: "eirini/recipe-uploader:0.3.0"
          executor_image: "eirini/recipe-executor:0.3.0"
          # TODO: make this configurable
          metrics_source_address: ""
          loggregator_address: localhost:3458
          loggregator_cert: ((loggregator_tls_agent.certificate))
          loggregator_key: ((loggregator_tls_agent.private_key))
          loggregator_ca: ((loggregator_tls_agent.certificate))
          cc_cert: ((cc_bridge_tps.certificate))
          cc_key: ((cc_bridge_tps.private_key))
          cc_ca: ((service_cf_internal_ca.certificate))
          cc_uploader_ip: "" # TODO: remove once we bump Eirini to a version that doesn't require this.
        quarks:
          ports:
          - name: https
            protocol: TCP
            internal: 8484

# Add eirinifs job to the bits-service to copy the tarball into the bits-service VM
- type: replace
  path: /instance_groups/name=bits/jobs/name=eirinifs?
  value:
    name: eirinifs
    release: eirini

- type: replace
  path: /releases/-
  value:
    name: eirini
    version: 0.0.22
    url: {{ .Values.releases.defaults.url | quote }}
    stemcell: {{ include "kubecf.stemcellLookup" (list .Values.releases "eirini") }}

# Set the correct addresses to be reached by the Eirini apps namespace.
- type: replace
  path: /instance_groups/name=api/jobs/name=cloud_controller_ng/properties/cc/buildpacks?/webdav_config/private_endpoint
  value: &blobstore_url "https://{{ .Values.deployment_name }}-singleton-blobstore.{{ .Release.Namespace }}:4443"
- type: replace
  path: /instance_groups/name=api/jobs/name=cloud_controller_ng/properties/cc/droplets?/webdav_config/private_endpoint
  value: *blobstore_url
- type: replace
  path: /instance_groups/name=api/jobs/name=cloud_controller_ng/properties/cc/packages?/webdav_config/private_endpoint
  value: *blobstore_url
- type: replace
  path: /instance_groups/name=api/jobs/name=cloud_controller_ng/properties/cc/resource_pool?/webdav_config/private_endpoint
  value: *blobstore_url
- type: replace
  path: /variables/name=blobstore_tls/options/alternative_names?/-
  value: "{{ .Values.deployment_name }}-singleton-blobstore"
- type: replace
  path: /variables/name=blobstore_tls/options/alternative_names?/-
  value: "{{ .Values.deployment_name }}-singleton-blobstore.{{ .Release.Namespace }}"
- type: replace
  path: /instance_groups/name=api/jobs/name=cc_uploader/properties/internal_hostname?
  value: "{{ .Values.deployment_name }}-api.{{ .Release.Namespace }}"
- type: replace
  path: /variables/name=cc_bridge_cc_uploader_server/options/alternative_names?/-
  value: "{{ .Values.deployment_name }}-api.{{ .Release.Namespace }}"

# Enable OPI in CC
# cloud_controller_ng
- type: replace
  path: /instance_groups/name=api/jobs/name=cloud_controller_ng/properties/cc/opi?/enabled?
  value: true
- type: replace
  path: /instance_groups/name=api/jobs/name=cloud_controller_ng/properties/cc/opi?/url?
  value: https://eirini.service.cf.internal:8484
- type: replace
  path: /instance_groups/name=api/jobs/name=cloud_controller_ng/properties/cc/opi?/opi_staging?
  value: true
- type: replace
  path: /instance_groups/name=api/jobs/name=cloud_controller_ng/properties/cc/opi?/client_cert?
  value: ((eirini_tls_client_cert.certificate))
- type: replace
  path: /instance_groups/name=api/jobs/name=cloud_controller_ng/properties/cc/opi?/client_key?
  value: ((eirini_tls_client_cert.private_key))
- type: replace
  path: /instance_groups/name=api/jobs/name=cloud_controller_ng/properties/cc/opi?/ca_cert?
  value: ((eirini_tls_server_cert.ca))

# cloud_controller_worker
- type: replace
  path: /instance_groups/name=cc-worker/jobs/name=cloud_controller_worker/properties/cc/opi?/enabled?
  value: true
- type: replace
  path: /instance_groups/name=cc-worker/jobs/name=cloud_controller_worker/properties/cc/opi?/url?
  value: https://eirini.service.cf.internal:8484
- type: replace
  path: /instance_groups/name=cc-worker/jobs/name=cloud_controller_worker/properties/cc/opi?/opi_staging?
  value: true
- type: replace
  path: /instance_groups/name=cc-worker/jobs/name=cloud_controller_worker/properties/cc/opi?/client_cert?
  value: ((eirini_tls_client_cert.certificate))
- type: replace
  path: /instance_groups/name=cc-worker/jobs/name=cloud_controller_worker/properties/cc/opi?/client_key?
  value: ((eirini_tls_client_cert.private_key))
- type: replace
  path: /instance_groups/name=cc-worker/jobs/name=cloud_controller_worker/properties/cc/opi?/ca_cert?
  value: ((eirini_tls_server_cert.ca))

# cloud_controller_clock
- type: replace
  path: /instance_groups/name=scheduler/jobs/name=cloud_controller_clock/properties/cc/opi?/enabled?
  value: true
- type: replace
  path: /instance_groups/name=scheduler/jobs/name=cloud_controller_clock/properties/cc/opi?/url?
  value: https://eirini.service.cf.internal:8484
- type: replace
  path: /instance_groups/name=scheduler/jobs/name=cloud_controller_clock/properties/cc/opi?/opi_staging?
  value: true
- type: replace
  path: /instance_groups/name=scheduler/jobs/name=cloud_controller_clock/properties/cc/opi?/client_cert?
  value: ((eirini_tls_client_cert.certificate))
- type: replace
  path: /instance_groups/name=scheduler/jobs/name=cloud_controller_clock/properties/cc/opi?/client_key?
  value: ((eirini_tls_client_cert.private_key))
- type: replace
  path: /instance_groups/name=scheduler/jobs/name=cloud_controller_clock/properties/cc/opi?/ca_cert?
  value: ((eirini_tls_server_cert.ca))

- type: replace
  path: /variables/name=eirini_tls_server_cert?
  value:
    name: eirini_tls_server_cert
    type: certificate
    options:
      ca: service_cf_internal_ca
      common_name: "{{ .Values.deployment_name }}-eirini"
      alternative_names:
      - "{{ .Values.deployment_name }}-eirini"
      - "{{ .Values.deployment_name }}-eirini.{{ .Release.Namespace }}"
      - eirini.service.cf.internal
      extended_key_usage:
      - server_auth
- type: replace
  path: /variables/name=eirini_tls_client_cert?
  value:
    name: eirini_tls_client_cert
    type: certificate
    options:
      ca: service_cf_internal_ca
      common_name: cloud_controller
      extended_key_usage:
      - client_auth

- type: replace
  path: /instance_groups/name=bits/jobs/name=eirinifs/properties?/quarks?
  value:
    bpm:
      processes: []
# Make loggregator agent cert validate correctly for fluentd in k8s nodes
- type: replace
  path: /variables/name=loggregator_tls_agent/options/alternative_names?
  value:
    - localhost
    - metron
- type: replace
  path: /variables/name=loggregator_tls_doppler/options/alternative_names?/-
  value: metron

{{- $root := . -}}
{{- range $path, $bytes := .Files.Glob "assets/operations/pre_render_scripts/eirini_*" }}
{{ $root.Files.Get $path }}
{{- end }}
